                //What is a DTO?

A data transfer object (DTO) is an object that carries data between processes.
The motivation for its use is that communication between processes is usually done resorting 
to remote interfaces (e.g., web services), where each call is an expensive operation.
Because the majority of the cost of each call is related to the round-trip time between
the client and the server, one way of reducing the number of calls is to use an object 
(the DTO) that aggregates the data that would have been transferred by the several calls, 
but that is served by one call only.

The difference between data transfer objects and business objects or data access objects
is that a DTO does not have any behavior except for storage, retrieval, serialization and 
deserialization of its own data (mutators, accessors, parsers and serializers).
In other words, DTOs are simple objects that should not contain any business logic but may
contain serialization and deserialization mechanisms for transferring data over the wire.


         //Motivation - Microsoft
Right now, our web API exposes the database entities to the client.
The client receives data that maps directly to your database tables.
However, that's not always a good idea. Sometimes you want to change the shape of the data
that you send to client. 

 A DTO is an object that defines how the data will be sent over the network.